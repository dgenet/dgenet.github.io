let quests = (localStorage.getItem('quests')) ? JSON.parse(localStorage.getItem('quests')) : [];
localStorage.setItem('quests', JSON.stringify(quests));

let quest_show = (localStorage.getItem('quest_show')) ? localStorage.getItem('quest_show') : 0;
localStorage.setItem('quest_show', quest_show);

let quest_version = (localStorage.getItem('quest_version')) ? localStorage.getItem('quest_version') : 0;
localStorage.setItem('quest_version', quest_version);

function save_quest_json(json) {
    $.each(json, function(i, q) {
        quests[q.id] = q.stages;
    });
    console.log(quests);
    localStorage.setItem('quests', JSON.stringify(quests));
}

function save_quest_version(json) {
    quest_new = json.version;
    if (quest_new != quest_version) {
        quests = [];
        const url = chrome.runtime.getURL('data/quests-2.0.json');
        fetch(url)
            .then((response) => {
                if (!response.ok) throw new Error('Network response was not ok');
                return response.json(); })
            .then((data) => {
                save_quest_json(data);
            })
            .catch((error) => {
                console.error('There has been a problem with your fetch operation:', error);
            });
        localStorage.setItem('quest_version', quest_new);
    }
}

function toggle_show_quests() {
    quest_show = 1-quest_show;
    localStorage.setItem('quest_show', quest_show);
    if (quest_show == 0) {
        $('#show_quests_button').html("Montrer les Etapes de Quetes");
    }
    else {
        $('#show_quests_button').html("Cacher les Etapes de Quetes");
    }
    $('tr.ExtraQuest').toggle();
}

function show_quest_button() {
    let nodeTableListeQuetes = document.body.getElementsByTagName('table').item(2);
    const nodeTdElement = nodeTableListeQuetes.getElementsByTagName('tr').item(1).getElementsByTagName('td').item(0);
    nodeTdElement.id = 'QH_listeQuetes';
    $('<div style=\"display:block;\" id=\"QH_show_quests_button\"></div>').prependTo(nodeTdElement);
    $('<button id="show_quests_button"  >Montrer les Etapes de Quetes</button>').prependTo('#QH_show_quests_button');

    let button = document.getElementById('show_quests_button');
    if (button) button.addEventListener('click', toggle_show_quests);
}

function quest_content(arr) {
    var desc = '';
    if (!(arr["pic"] == false)) {
        desc = ' <img src="https://www.pirates-caraibes.com/media/'+arr["pic"]+'"></img>';
    }
    if (parseInt(arr["cx"]) > -1)
        desc += '(X:'+arr["cx"]+', Y:'+arr["cy"]+' sur '+arr["map"]+')';
    if (arr["type"] == 'talk') return 'Parler a '+arr["name"]+desc+'.';
    if (arr["type"] == 'kill') return 'Tuer '+arr["quantity"]+' '+arr["name"]+desc+'.';
    if (arr["type"] == 'dig') return 'Creuser '+arr["name"]+desc+'.';
    if (arr["type"] == 'interact') return 'Examiner '+arr["name"]+desc+'.';
    if (arr["type"] == 'provide') return 'Trouver '+arr["quantity"]+' '+arr["name"]+desc+'.';
}

$(document).ready(function() {
    const urlActuel = document.location.pathname.toString().toLowerCase();

    if ( !urlActuel.localeCompare('/fr/jeu/') ) {
        //let entries = document.getElementsByClassName("TxtProxJeu");
        //alert(entries.length());
        $('td.TxtProxJeu').css("color", "red");

    }

    if ( !urlActuel.localeCompare('/fr/jeu/equipement_talent.php') ) {
        // Each talent's picture is now a button that toggle the description
        var i = 0;
        for (; i < 101; ++i) {
            let pic = $('#imgTalent_'+i);
            if (pic) pic.click(function() {
                var id = $(this).attr('id');
                $(id.replace('imgTalent', '#talent') + '_html').toggle();
                return false;
            });
        }
    }

    if ( !urlActuel.localeCompare('/fr/jeu/livrequetes.php') ) {
        // opening the quests book preloads the quests walkthrough
        show_quest_button();

        const manif_url = chrome.runtime.getURL('manifest.json');
        fetch(manif_url)
            .then((response) => {
                if (!response.ok) throw new Error('Network response was not ok');
                return response.json(); })
            .then((data) => {
                save_quest_version(data);
            })
            .catch((error) => {
                console.error('There has been a problem with your fetch operation:', error);
            });

        // if the quests array is filled, fill missing steps
        if ( quests.length ) {
            $('body > table:nth-child(3) > tbody > tr > td > table').each(function(idx){
                let idQ = $(this).attr("id");
                if (quests[idQ]) {
                    let n = $('tbody tr', this).length-2;
                    let extra = '';
                    let current = $(this);
                    let child = $('tbody > tr > td > table > tbody', this).children('tr').each(function(i) {
                        if (i > 0) {
                            let pic = $('td', this).css('background-image');
                            pic = pic.replace(/^url\(["']?/, '').replace(/["']?\)$/, '');
                            pic = pic.replace(/^.*[\\\/]/, '');
                            var content = 'Etape '+i+' : ';
                            if (pic == "Ico_undone.png") {
                                content += quest_content(quests[idQ][i-1]);
                                $('<tr class="ExtraQuest"><td class="TexteDeBaseJeu" style="color:#555555; margin-left: 1em;">'+content+'</td></tr>').appendTo(current);

                            }

                        }
                    });

                    for (i = n; i < quests[idQ].length; ++i) { // for all the stages that still unknown
                        var content = 'Etape '+(parseInt(i)+1)+' : ';
                        content += quest_content(quests[idQ][i]);
                        $('<tr class="ExtraQuest"><td class="TexteDeBaseJeu" style="color:#555555; margin-left: 1em;">'+content+'</td></tr>').appendTo(this);
                    }
                }
            });
        }
        if (0 == quest_show) $('tr.ExtraQuest').toggle();
    }

    if ( !urlActuel.localeCompare('/fr/jeu/detailquetes.php') ) {
        // opening a quest fils the missing steps for completion
        if ( quests.length ) {
            let params = new URLSearchParams(document.location.search.substring(1));
            let idQ = parseInt(params.get("u_i_quete"), 10);

            if (quests[idQ]) { // TODO: coordinates to informant/targets, eventually to item to examine
                let stages = $('#tblQuete tbody tr:first td table tbody');
                let n = $('tr', stages).length-2;

                for (; n < quests[idQ].length; ++n) {
                    var content = 'Etape '+quests[idQ][n]["id"]+' : ';
                    content += quest_content(quests[idQ][n]);
                    $('<tr class="ExtraQuest"><td class="TexteDeBasePetit" colspan=2 style="color:darkgray; padding-left:30px; text-indent: -1em; margin-left: 1em;">'+content+'</td></tr>').appendTo(stages);
                }
            }
        }
        if (0 == quest_show) $('tr.ExtraQuest').toggle();
    }

    if ( !urlActuel.localeCompare('/fr/jeu/equipement.php') ) {
        //save your gear



    }

    if ( !urlActuel.localeCompare('/fr/jeu/equipement_talent.php') ) {
        //save your stats
        let precision = parseInt($('#tblAptitudes tbody tr:first-child td:nth-child(3)').html(), 10);
        let esquive   = parseInt($('#tblAptitudes tbody tr:nth-child(2) td:nth-child(3)').html(), 10);
        //console.log('Cumul: '+precision+'+'+esquive);

    }
});
